# 3.8 computing
library(AppliedPredictiveModeling)
# 3.8 computing
require(AppliedPredictiveModeling)
library(AppliedPredictiveModeling)
library(AppliedPredictiveModeling)
library(AppliedPredictiveModeling)
library(AppliedPredictiveModeling)
# 3.8 computing
install.packages("AppliedPredictiveModeling", repos="http://R-Forge.R-project.org")
AppliedPredictiveModeling
# 3.8 computing
install.packages("AppliedPredictiveModeling", repos="http://R-Forge.R-project.org")
library(AppliedPredictiveModeling)
library(AppliedPredictiveModeling)
library(AppliedPredictiveModeling)
require(AppliedPredictiveModeling)
data(segmentationOriginal)
# 3.8 computing
install.packages("AppliedPredictiveModeling", repos="http://R-Forge.R-project.org")
# 3.8 computing
install.packages("AppliedPredictiveModeling")
library(AppliedPredictiveModeling)
# load data
data(segmentationOriginal)
str(segmentationOriginal)
# focus on train set
segData <- subset(segmentationOriginal, Case == "Train")
# class and cell saved into seprate vector
cellID <- segData$Cell
class <- segData$Class
case <- segData$Case
# Now remove the columns
segData <- segData[, -(1:3)]
# Make transformations
# using function skweness from e1071 package
library(e1071)
# skweness example
skewness(segData$AngleCh1)
# apply skweness on all columns
kewValues <- apply(segData, 2, skewness)
head(skewValues)
# apply skweness on all columns
skewValues <- apply(segData, 2, skewness)
head(skewValues)
# detemine which type of transformation should be used. MASS package function boxcox
# caret package function BoxCoxTrans can find appropiate tansformation and play it
library(caret)
Ch1AreaTrans <- BoxCoxTrans(segData$AreaCh1)
Ch1AreaTrans
trans <- preProcess(segData,method = c("BoxCox", "center", "scale", "pca"))
# Filtering
nearZeroVar(segData)
correlations <- cor(segData)
dim(correlations)
correlations[1:4, 1:4]
# visualize
library(corrplot)
corrplot(correlations, order = "hclust")
corrplot(correlations, order = "hclust")
corrplot(correlations, order = "hclust")
